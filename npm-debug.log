0 info it worked if it ends with ok
1 verbose cli [ 'C:\\DEV\\libs\\js\\nodejs\\\\node.exe',
1 verbose cli   'C:\\DEV\\libs\\js\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@1.4.28
3 info using node@v0.10.36
4 verbose node symlink C:\DEV\libs\js\nodejs\\node.exe
5 verbose publish [ '.' ]
6 verbose cache add [ '.', null ]
7 verbose cache add name=undefined spec="." args=[".",null]
8 verbose parsed url { protocol: null,
8 verbose parsed url   slashes: null,
8 verbose parsed url   auth: null,
8 verbose parsed url   host: null,
8 verbose parsed url   port: null,
8 verbose parsed url   hostname: null,
8 verbose parsed url   hash: null,
8 verbose parsed url   search: null,
8 verbose parsed url   query: null,
8 verbose parsed url   pathname: '.',
8 verbose parsed url   path: '.',
8 verbose parsed url   href: '.' }
9 silly lockFile 3a52ce78- .
10 verbose lock . C:\Users\belepek\AppData\Roaming\npm-cache\3a52ce78-.lock
11 verbose tar pack [ 'C:\\Users\\belepek\\AppData\\Roaming\\npm-cache\\node-uglifier\\0.3.0\\package.tgz',
11 verbose tar pack   '.' ]
12 verbose tarball C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package.tgz
13 verbose folder .
14 info prepublish node-uglifier@0.3.0
15 silly lockFile 1f1177db-tar tar://.
16 verbose lock tar://. C:\Users\belepek\AppData\Roaming\npm-cache\1f1177db-tar.lock
17 silly lockFile 2d7ec94a--node-uglifier-0-3-0-package-tgz tar://C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package.tgz
18 verbose lock tar://C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package.tgz C:\Users\belepek\AppData\Roaming\npm-cache\2d7ec94a--node-uglifier-0-3-0-package-tgz.lock
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 1f1177db-tar tar://.
21 silly lockFile 2d7ec94a--node-uglifier-0-3-0-package-tgz tar://C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package.tgz
22 silly lockFile 2d7ec94a--node-uglifier-0-3-0-package-tgz tar://C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package.tgz
23 silly lockFile f2c64d8d-ache-node-uglifier-0-3-0-package C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package
24 verbose lock C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package C:\Users\belepek\AppData\Roaming\npm-cache\f2c64d8d-ache-node-uglifier-0-3-0-package.lock
25 silly lockFile f2c64d8d-ache-node-uglifier-0-3-0-package C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package
26 silly lockFile f2c64d8d-ache-node-uglifier-0-3-0-package C:\Users\belepek\AppData\Roaming\npm-cache\node-uglifier\0.3.0\package
27 silly lockFile 3a52ce78- .
28 silly lockFile 3a52ce78- .
29 silly publish { name: 'node-uglifier',
29 silly publish   description: 'Fully auto merging and uglifying a whole NodeJs project into one file with external files option. Thieves lose the module name and structure information, code runs faster. Makes deployement super easy!',
29 silly publish   version: '0.3.0',
29 silly publish   homepage: 'https://github.com/zsoltszabo/node-uglifier',
29 silly publish   repository:
29 silly publish    { type: 'git',
29 silly publish      url: 'git://github.com/zsoltszabo/node-uglifier.git' },
29 silly publish   author: { name: 'Zsolt Istvan Szabo', email: 'zsoltszabo317@gmail.com' },
29 silly publish   url: 'https://github.com/zsoltszabo/node-uglifier',
29 silly publish   keywords:
29 silly publish    [ 'obfuscate',
29 silly publish      'total',
29 silly publish      'whole',
29 silly publish      'project',
29 silly publish      'protect',
29 silly publish      'minify',
29 silly publish      'code protect',
29 silly publish      'uglify',
29 silly publish      'mangle',
29 silly publish      'compress',
29 silly publish      'automatic' ],
29 silly publish   contributors: [],
29 silly publish   dependencies:
29 silly publish    { seedrandom: '>=0.x',
29 silly publish      sugar: '>=1.4.1',
29 silly publish      underscore: '>=1.5.2',
29 silly publish      'uglify-js': '>=2.3',
29 silly publish      nodeunit: '>=0.x',
29 silly publish      'fs-extra': '>=0.x',
29 silly publish      optparse: '>=0.x' },
29 silly publish   devDependencies: { nodeunit: '>=0.x' },
29 silly publish   engines: { node: '> 0.6.0' },
29 silly publish   main: './index.js',
29 silly publish   scripts: { test: 'node nodeunit.js ./lib_compiled/test/unitTest.js' },
29 silly publish   readmeFilename: 'README.md',
29 silly publish   readme: 'node-uglifier\r\n=========\r\n\r\nAs I have just completed a huge pure Nodejs project in 80+ files. I started to search for methods to have at least a minimal protection for my server side code.\r\nI found no simple solution that could handle the **NodeJS** module system automatically so I created **node-uglifier**. My almost 500Kb code in about 80 files got packed into a single file with around 150Kb size.\r\n\r\nIf you like the project and you want me to share developements in the future too.\r\nPlease take 15 seconds of your time and visit my GITHUB page too to pass some love in the form of stars there. Thanks!\r\nhttps://github.com/zsoltszabo/node-uglifier\r\n\r\nhow it works\r\n--------\r\n\r\nIt visits all "required" files recursively. It merges all your files into a single one (core and npm modules aside). Than you can apply uglify to that single merged file.\r\nA combined file has the benefit of removing module name and module structure information as well. Making reverse engineering a bit harder.\r\n\r\nYou can find examples in the lib_compiled/test/unitTest.js. Here is a taste of how it works from the unit tests.\r\n\r\n!!!For smooth operation set the working directory to the project\'s root. So start node in the project\'s root.!!!\r\n\r\n##Commands\r\n\r\n* npm install "node-uglifier"\r\n* NodeUglifier = require("node-uglifier");\r\n* nodeUglifier = new NodeUglifier("lib_compiled/test/testproject/main.js");\r\n* nodeUglifier.merge().uglify()\r\n\r\n### export\r\n* nodeUglifier.exportToFile("lib_compiled/test/resultFiles/simpleMergeAndUglify.js")\r\n* nodeUglifier.exportSourceMaps("lib_compiled/test/resultFiles/sourcemaps/simpleMergeAndUglify.js");\r\n\r\n### in case you need it\r\n* uglifiedString=nodeUglifier.toString()\r\n* if you call the above before uglify() but after merge() you get the not yet uglified merged source\r\n\r\n\r\n\r\n### one liner\r\n*  (new NodeUglifier("lib_compiled/test/testproject/main.js")).uglify().exportToFile("lib_compiled/test/resultFiles/simpleMergeAndUglify.js");\r\n\r\n\r\nExtra\r\n--------\r\nYou can keep files external if you pass an option to the NodeUglifier class.\r\n\r\n* nodeUglifier=new NodeUglifier("lib_compiled/test/testproject/main.js",{mergeFileFilter:["./lib_static/test/","./depa/constants.js"]})\r\n* nodeUglifier.exportToFile("lib_compiled/test/resultFiles/simpleMergeWithFilterAndUglify.js");\r\n\r\nThey will be copied to the ./lib_external folder and references to them will be modified in the merged file.\r\n\r\n+1\r\nLife safer new feature: Export all your dependencies including source files to a new folder. So if you have like many "main files" within your project folder\r\nand a lot of common dependencies this saves your ass if you have to give your co worker the minimal set of files that one of the main needs. From the testDependenciesExport unit test:\r\n*  exportDir="lib_test_project_export/"\r\n*  nodeUglifier=new NodeUglifier("lib_compiled/test/testproject/main.js",{rngSeed:"hello"})\r\n*  nodeUglifier.exportDependencies(exportDir,{coffee:{src:"lib_compiled"}})\r\nThe second parameter to exportDependencies is optional, handy if you have coffee source files too. If a source is not found, written out to console with WARNING.\r\n\r\n+2\r\nIt handles as well:\r\n new(require(module))(constructorParams)\r\n require(module)()\r\n require(module)(something)\r\n require(\'./randomJsonFile.json\')\r\n\r\nNotes\r\n--------\r\nObviously you need to avoid cycles in your merged dependencies. Though they are all detected and written out to console, so no worries.\r\n\r\nAlso at the moment obviously it cannot handle dynamic module loading. You will get warnings for those.\r\n\r\nI like programing in high level interpreted languages but I hate filthy thieves, blackhat hackers. They can steal the fruit of your hard work in just a fraction of the time of that it took you to create it.\r\nIf you have any idea, contribution how to protect a full NodeJS app even better, obfuscate it better just contact me, commit to Github for creds:). I would like to make this project\r\na one stop shop for NodeJs project protection.\r\n\r\nIt is tested on Windows if you find problems on Linux please contact me.\r\n\r\nChange log\r\n--------\r\n0.3.0 Handles require JSON files by changing the source to be correct JS syntax.\r\n\r\n0.2.5 Life safer new feature: Export all your dependencies including source files to a new folder\r\n      Basically you can separate your project this way and limit the files your co worker can see.\r\n      see the very short unit test: exports.testDependenciesExport\r\n\r\n0.2.3 Removed unused execSync module, (in new Node versions it was giving error)\r\n\r\n0.2.1  Readme errors\r\n\r\n0.2.0: I got inquiry on Github about why meanstack cannot be merged. That project is now included in the testprojects and a new unit test created for it: testOnMeanStack.coffee\r\n       In that test file I write down the issues I had and how I resolved those. In short it had fancy require statements and same filenames as module names.\r\n       Also now there is a "Warning!:" console log for unprocessed require statements. (they will be 95% of the time dynamic ones)\r\n\r\n0.1.8: Throws error for cyclic dependencies, listing all of them.\r\n\r\n0.1.6: Bug fix for filtered out dependency check on merged files.\r\n       Added suppressFilteredDependentError:true option. (handy if you want to remove part of project from production, you only have to then delete these files auto from lib_external with your build script)\r\n       ->new NodeUglifier("lib_compiled/test/testproject/main.js",{suppressFilteredDependentError:true})\r\n\r\n0.1.5: Added strings to hex converting to uglify options - nodeUglifier.uglify({strProtectionLvl:1})\r\n',
29 silly publish   gitHead: '4b6410e92a304c964b52c4dad588eaf79e99d8b5',
29 silly publish   bugs: { url: 'https://github.com/zsoltszabo/node-uglifier/issues' },
29 silly publish   _id: 'node-uglifier@0.3.0',
29 silly publish   _shasum: '224eb4c58f98c274ffa6cee18c84bd7d107a3138',
29 silly publish   _from: '.' }
30 verbose request where is /node-uglifier
31 verbose request registry https://registry.npmjs.org/
32 verbose request id d313c00bd84240e0
33 verbose url raw /node-uglifier
34 verbose url resolving [ 'https://registry.npmjs.org/', './node-uglifier' ]
35 verbose url resolved https://registry.npmjs.org/node-uglifier
36 verbose request where is https://registry.npmjs.org/node-uglifier
37 info trying registry request attempt 1 at 02:09:22
38 http PUT https://registry.npmjs.org/node-uglifier
39 http 403 https://registry.npmjs.org/node-uglifier
40 verbose headers { date: 'Thu, 05 Mar 2015 01:09:24 GMT',
40 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
40 verbose headers   'content-type': 'application/json',
40 verbose headers   'cache-control': 'max-age=60',
40 verbose headers   'content-length': '10346',
40 verbose headers   'accept-ranges': 'bytes',
40 verbose headers   via: '1.1 varnish',
40 verbose headers   'x-served-by': 'cache-ams4140-AMS',
40 verbose headers   'x-cache': 'MISS',
40 verbose headers   'x-cache-hits': '0',
40 verbose headers   'x-timer': 'S1425517763.363590,VS0,VE1514',
40 verbose headers   'keep-alive': 'timeout=10, max=50',
40 verbose headers   connection: 'Keep-Alive' }
41 error publish Failed PUT 403
42 error Error: forbidden cannot modify pre-existing version: 0.3.0
42 error old={"name":"node-uglifier","description":"Fully auto merging and uglifying a whole NodeJs project into one file with external files option. Thieves lose the module name and structure information, code runs faster. Makes deployement super easy!","version":"0.3.0","homepage":"https://github.com/zsoltszabo/node-uglifier","repository":{"type":"git","url":"git://github.com/zsoltszabo/node-uglifier.git"},"author":{"name":"Zsolt Istvan Szabo","email":"zsoltszabo317@gmail.com"},"url":"https://github.com/zsoltszabo/node-uglifier","keywords":["obfuscate","total","whole","project","protect","minify","code protect","uglify","mangle","compress","automatic"],"contributors":[],"dependencies":{"seedrandom":">=0.x","sugar":">=1.4.1","underscore":">=1.5.2","uglify-js":">=2.3","nodeunit":">=0.x","fs-extra":">=0.x","optparse":">=0.x"},"devDependencies":{"nodeunit":">=0.x"},"engines":{"node":"> 0.6.0"},"main":"./index.js","scripts":{"test":"node nodeunit.js ./lib_compiled/test/unitTest.js"},"gitHead":"9dca730c8602d64e71591f1b160804edb0457195","bugs":{"url":"https://github.com/zsoltszabo/node-uglifier/issues"},"_id":"node-uglifier@0.3.0","_shasum":"1ac77f1743a16558198905e9a2375617ea287861","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"arbitrager","email":"zsoltszabo@web.de"},"maintainers":[{"name":"arbitrager","email":"zsoltszabo@web.de"}],"dist":{"shasum":"1ac77f1743a16558198905e9a2375617ea287861","tarball":"http://registry.npmjs.org/node-uglifier/-/node-uglifier-0.3.0.tgz"}}
42 error new={"name":"node-uglifier","description":"Fully auto merging and uglifying a whole NodeJs project into one file with external files option. Thieves lose the module name and structure information, code runs faster. Makes deployement super easy!","version":"0.3.0","homepage":"https://github.com/zsoltszabo/node-uglifier","repository":{"type":"git","url":"git://github.com/zsoltszabo/node-uglifier.git"},"author":{"name":"Zsolt Istvan Szabo","email":"zsoltszabo317@gmail.com"},"url":"https://github.com/zsoltszabo/node-uglifier","keywords":["obfuscate","total","whole","project","protect","minify","code protect","uglify","mangle","compress","automatic"],"contributors":[],"dependencies":{"seedrandom":">=0.x","sugar":">=1.4.1","underscore":">=1.5.2","uglify-js":">=2.3","nodeunit":">=0.x","fs-extra":">=0.x","optparse":">=0.x"},"devDependencies":{"nodeunit":">=0.x"},"engines":{"node":"> 0.6.0"},"main":"./index.js","scripts":{"test":"node nodeunit.js ./lib_compiled/test/unitTest.js"},"readmeFilename":"README.md","readme":"node-uglifier\u000d\u000a=========\u000d\u000a\u000d\u000aAs I have just completed a huge pure Nodejs project in 80+ files. I started to search for methods to have at least a minimal protection for my server side code.\u000d\u000aI found no simple solution that could handle the **NodeJS** module system automatically so I created **node-uglifier**. My almost 500Kb code in about 80 files got packed into a single file with around 150Kb size.\u000d\u000a\u000d\u000aIf you like the project and you want me to share developements in the future too.\u000d\u000aPlease take 15 seconds of your time and visit my GITHUB page too to pass some love in the form of stars there. Thanks!\u000d\u000ahttps://github.com/zsoltszabo/node-uglifier\u000d\u000a\u000d\u000ahow it works\u000d\u000a--------\u000d\u000a\u000d\u000aIt visits all \"required\" files recursively. It merges all your files into a single one (core and npm modules aside). Than you can apply uglify to that single merged file.\u000d\u000aA combined file has the benefit of removing module name and module structure information as well. Making reverse engineering a bit harder.\u000d\u000a\u000d\u000aYou can find examples in the lib_compiled/test/unitTest.js. Here is a taste of how it works from the unit tests.\u000d\u000a\u000d\u000a!!!For smooth operation set the working directory to the project's root. So start node in the project's root.!!!\u000d\u000a\u000d\u000a##Commands\u000d\u000a\u000d\u000a* npm install \"node-uglifier\"\u000d\u000a* NodeUglifier = require(\"node-uglifier\");\u000d\u000a* nodeUglifier = new NodeUglifier(\"lib_compiled/test/testproject/main.js\");\u000d\u000a* nodeUglifier.merge().uglify()\u000d\u000a\u000d\u000a### export\u000d\u000a* nodeUglifier.exportToFile(\"lib_compiled/test/resultFiles/simpleMergeAndUglify.js\")\u000d\u000a* nodeUglifier.exportSourceMaps(\"lib_compiled/test/resultFiles/sourcemaps/simpleMergeAndUglify.js\");\u000d\u000a\u000d\u000a### in case you need it\u000d\u000a* uglifiedString=nodeUglifier.toString()\u000d\u000a* if you call the above before uglify() but after merge() you get the not yet uglified merged source\u000d\u000a\u000d\u000a\u000d\u000a\u000d\u000a### one liner\u000d\u000a*  (new NodeUglifier(\"lib_compiled/test/testproject/main.js\")).uglify().exportToFile(\"lib_compiled/test/resultFiles/simpleMergeAndUglify.js\");\u000d\u000a\u000d\u000a\u000d\u000aExtra\u000d\u000a--------\u000d\u000aYou can keep files external if you pass an option to the NodeUglifier class.\u000d\u000a\u000d\u000a* nodeUglifier=new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{mergeFileFilter:[\"./lib_static/test/\",\"./depa/constants.js\"]})\u000d\u000a* nodeUglifier.exportToFile(\"lib_compiled/test/resultFiles/simpleMergeWithFilterAndUglify.js\");\u000d\u000a\u000d\u000aThey will be copied to the ./lib_external folder and references to them will be modified in the merged file.\u000d\u000a\u000d\u000a+1\u000d\u000aLife safer new feature: Export all your dependencies including source files to a new folder. So if you have like many \"main files\" within your project folder\u000d\u000aand a lot of common dependencies this saves your ass if you have to give your co worker the minimal set of files that one of the main needs. From the testDependenciesExport unit test:\u000d\u000a*  exportDir=\"lib_test_project_export/\"\u000d\u000a*  nodeUglifier=new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{rngSeed:\"hello\"})\u000d\u000a*  nodeUglifier.exportDependencies(exportDir,{coffee:{src:\"lib_compiled\"}})\u000d\u000aThe second parameter to exportDependencies is optional, handy if you have coffee source files too. If a source is not found, written out to console with WARNING.\u000d\u000a\u000d\u000a+2\u000d\u000aIt handles as well:\u000d\u000a new(require(module))(constructorParams)\u000d\u000a require(module)()\u000d\u000a require(module)(something)\u000d\u000a require('./randomJsonFile.json')\u000d\u000a\u000d\u000aNotes\u000d\u000a--------\u000d\u000aObviously you need to avoid cycles in your merged dependencies. Though they are all detected and written out to console, so no worries.\u000d\u000a\u000d\u000aAlso at the moment obviously it cannot handle dynamic module loading. You will get warnings for those.\u000d\u000a\u000d\u000aI like programing in high level interpreted languages but I hate filthy thieves, blackhat hackers. They can steal the fruit of your hard work in just a fraction of the time of that it took you to create it.\u000d\u000aIf you have any idea, contribution how to protect a full NodeJS app even better, obfuscate it better just contact me, commit to Github for creds:). I would like to make this project\u000d\u000aa one stop shop for NodeJs project protection.\u000d\u000a\u000d\u000aIt is tested on Windows if you find problems on Linux please contact me.\u000d\u000a\u000d\u000aChange log\u000d\u000a--------\u000d\u000a0.3.0 Handles require JSON files by changing the source to be correct JS syntax.\u000d\u000a\u000d\u000a0.2.5 Life safer new feature: Export all your dependencies including source files to a new folder\u000d\u000a      Basically you can separate your project this way and limit the files your co worker can see.\u000d\u000a      see the very short unit test: exports.testDependenciesExport\u000d\u000a\u000d\u000a0.2.3 Removed unused execSync module, (in new Node versions it was giving error)\u000d\u000a\u000d\u000a0.2.1  Readme errors\u000d\u000a\u000d\u000a0.2.0: I got inquiry on Github about why meanstack cannot be merged. That project is now included in the testprojects and a new unit test created for it: testOnMeanStack.coffee\u000d\u000a       In that test file I write down the issues I had and how I resolved those. In short it had fancy require statements and same filenames as module names.\u000d\u000a       Also now there is a \"Warning!:\" console log for unprocessed require statements. (they will be 95% of the time dynamic ones)\u000d\u000a\u000d\u000a0.1.8: Throws error for cyclic dependencies, listing all of them.\u000d\u000a\u000d\u000a0.1.6: Bug fix for filtered out dependency check on merged files.\u000d\u000a       Added suppressFilteredDependentError:true option. (handy if you want to remove part of project from production, you only have to then delete these files auto from lib_external with your build script)\u000d\u000a       ->new NodeUglifier(\"lib_compiled/test/testproject/main.js\",{suppressFilteredDependentError:true})\u000d\u000a\u000d\u000a0.1.5: Added strings to hex converting to uglify options - nodeUglifier.uglify({strProtectionLvl:1})\u000d\u000a","gitHead":"4b6410e92a304c964b52c4dad588eaf79e99d8b5","bugs":{"url":"https://github.com/zsoltszabo/node-uglifier/issues"},"_id":"node-uglifier@0.3.0","_shasum":"224eb4c58f98c274ffa6cee18c84bd7d107a3138","_from":".","_npmVersion":"1.4.28","_npmUser":{"name":"arbitrager","email":"zsoltszabo@web.de"},"maintainers":[{"name":"arbitrager","email":"zsoltszabo@web.de"}],"dist":{"shasum":"224eb4c58f98c274ffa6cee18c84bd7d107a3138","tarball":"http://registry.npmjs.org/node-uglifier/-/node-uglifier-0.3.0.tgz"}}: node-uglifier
42 error     at RegClient.<anonymous> (C:\DEV\libs\js\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:308:14)
42 error     at Request._callback (C:\DEV\libs\js\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:246:65)
42 error     at Request.self.callback (C:\DEV\libs\js\nodejs\node_modules\npm\node_modules\request\request.js:236:22)
42 error     at Request.emit (events.js:98:17)
42 error     at Request.<anonymous> (C:\DEV\libs\js\nodejs\node_modules\npm\node_modules\request\request.js:1142:14)
42 error     at Request.emit (events.js:117:20)
42 error     at IncomingMessage.<anonymous> (C:\DEV\libs\js\nodejs\node_modules\npm\node_modules\request\request.js:1096:12)
42 error     at IncomingMessage.emit (events.js:117:20)
42 error     at _stream_readable.js:944:16
42 error     at process._tickCallback (node.js:442:13)
43 error If you need help, you may report this *entire* log,
43 error including the npm and node versions, at:
43 error     <http://github.com/npm/npm/issues>
44 error System Windows_NT 6.1.7601
45 error command "C:\\DEV\\libs\\js\\nodejs\\\\node.exe" "C:\\DEV\\libs\\js\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
46 error cwd C:\DEV\GITHOME\git5\node-uglifier
47 error node -v v0.10.36
48 error npm -v 1.4.28
49 verbose exit [ 1, true ]
